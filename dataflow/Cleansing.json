{
	"name": "Cleansing",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "product_data_from_sql",
						"type": "DatasetReference"
					},
					"name": "ProductDetails"
				},
				{
					"dataset": {
						"referenceName": "Transaction",
						"type": "DatasetReference"
					},
					"name": "Transactions"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "productsRefinedAZuresA",
						"type": "DatasetReference"
					},
					"name": "ProductFined"
				},
				{
					"dataset": {
						"referenceName": "TransactionREfinedASQL",
						"type": "DatasetReference"
					},
					"name": "TransactionsFined"
				}
			],
			"transformations": [
				{
					"name": "TypeCasting"
				},
				{
					"name": "WidthInMM"
				},
				{
					"name": "TypeCastingDateQty"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          image_url as string,",
				"          image_url_suffix as string,",
				"          imageUrls as string,",
				"          product_url as string,",
				"          color as string,",
				"          size as string,",
				"          width as string,",
				"          brand_name as string,",
				"          brand_name_en as string,",
				"          brand_logo as string,",
				"          model_name as string,",
				"          is_tbyb as string,",
				"          tags as string,",
				"          color_options as string,",
				"          totalColorAvailable as string,",
				"          is_ditto as string,",
				"          classification as string,",
				"          specifications as string,",
				"          wishlistCount as string,",
				"          purchaseCount as string,",
				"          avgRating as string,",
				"          totalNoOfRatings as string,",
				"          hashtagList as string,",
				"          offerName as string,",
				"          cmsLinkAndroid as string,",
				"          cmsLinkIos as string,",
				"          arModelAndroidUrl as string,",
				"          arModelIOSUrl as string,",
				"          arModelMsiteAndDesktopUrl as string,",
				"          arModelOriginalUrl as string,",
				"          qty as string,",
				"          frameColorImage as string,",
				"          subCollection as string,",
				"          subCollectionId as string,",
				"          relatedItems as string,",
				"          isCygnusEnabled as string,",
				"          isCashbackApplicable as string,",
				"          searchProductName as string,",
				"          prescriptionType as string,",
				"          occasion as string,",
				"          suited_for as string,",
				"          inclusiveText as string,",
				"          clUsage as string,",
				"          tryOnImageUrl as string,",
				"          offer_image as string,",
				"          isCombo as string,",
				"          comboImageUrl as string,",
				"          comboDescription as string,",
				"          Market_Price as string,",
				"          Lenskart_Price as string,",
				"          Discount_Percentage as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductDetails",
				"source(output(",
				"          customer_id as string,",
				"          product_id as string,",
				"          quantity as string,",
				"          transaction_date as string,",
				"          transaction_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Transactions",
				"WidthInMM cast(output(",
				"          id as string,",
				"          image_url as string,",
				"          image_url_suffix as string,",
				"          imageUrls as string,",
				"          product_url as string,",
				"          color as string,",
				"          size as string,",
				"          width as integer,",
				"          brand_name as string,",
				"          brand_name_en as string,",
				"          brand_logo as string,",
				"          model_name as string,",
				"          is_tbyb as boolean,",
				"          tags as string,",
				"          color_options as string,",
				"          totalColorAvailable as string,",
				"          is_ditto as boolean,",
				"          classification as string,",
				"          specifications as string,",
				"          wishlistCount as integer,",
				"          purchaseCount as integer,",
				"          avgRating as integer,",
				"          totalNoOfRatings as integer,",
				"          hashtagList as string,",
				"          offerName as string,",
				"          cmsLinkAndroid as string,",
				"          cmsLinkIos as string,",
				"          arModelAndroidUrl as string,",
				"          arModelIOSUrl as string,",
				"          arModelMsiteAndDesktopUrl as string,",
				"          arModelOriginalUrl as string,",
				"          qty as integer,",
				"          frameColorImage as string,",
				"          subCollection as string,",
				"          subCollectionId as string,",
				"          relatedItems as string,",
				"          isCygnusEnabled as boolean,",
				"          isCashbackApplicable as boolean,",
				"          searchProductName as string,",
				"          prescriptionType as string,",
				"          occasion as string,",
				"          suited_for as string,",
				"          inclusiveText as string,",
				"          clUsage as string,",
				"          tryOnImageUrl as string,",
				"          offer_image as string,",
				"          isCombo as string,",
				"          comboImageUrl as string,",
				"          comboDescription as string,",
				"          Market_Price as integer,",
				"          Lenskart_Price as integer,",
				"          Discount_Percentage as integer",
				"     ),",
				"     errors: true) ~> TypeCasting",
				"ProductDetails derive(width = replace(width, 'mm', '')) ~> WidthInMM",
				"Transactions cast(output(",
				"          quantity as integer,",
				"          transaction_date as date",
				"     ),",
				"     errors: true) ~> TypeCastingDateQty",
				"TypeCasting select(mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          product_url,",
				"          color,",
				"          size,",
				"          width = {width(in MM)},",
				"          brand_name,",
				"          brand_name_en,",
				"          model_name,",
				"          is_tbyb,",
				"          tags,",
				"          is_ditto,",
				"          classification,",
				"          specifications,",
				"          wishlistCount,",
				"          purchaseCount,",
				"          avgRating,",
				"          totalNoOfRatings,",
				"          hashtagList,",
				"          offerName,",
				"          cmsLinkIos,",
				"          qty,",
				"          subCollection,",
				"          subCollectionId,",
				"          isCygnusEnabled,",
				"          isCashbackApplicable,",
				"          searchProductName,",
				"          Market_Price,",
				"          Lenskart_Price,",
				"          Discount_Percentage",
				"     )) ~> ProductFined",
				"TypeCastingDateQty sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          customer_id as string,",
				"          product_id as string,",
				"          quantity as integer,",
				"          transaction_date as date,",
				"          transaction_id as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> TransactionsFined"
			]
		}
	}
}